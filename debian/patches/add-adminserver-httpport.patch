--- a/hphp/runtime/base/runtime-option.cpp
+++ b/hphp/runtime/base/runtime-option.cpp
@@ -254,6 +254,7 @@
 
 std::string RuntimeOption::TakeoverFilename;
 int RuntimeOption::AdminServerPort = 0;
+int RuntimeOption::AdminServerHttpPort = 0;
 int RuntimeOption::AdminThreadCount = 1;
 std::string RuntimeOption::AdminPassword;
 std::set<std::string> RuntimeOption::AdminPasswords;
@@ -1245,6 +1246,7 @@
   {
     Hdf admin = config["AdminServer"];
     Config::Bind(AdminServerPort, ini, admin["Port"], 0);
+    Config::Bind(AdminServerHttpPort, ini, admin["HttpPort"], 0);
     Config::Bind(AdminThreadCount, ini, admin["ThreadCount"], 1);
     Config::Bind(AdminPassword, ini, admin["Password"]);
     Config::Get(ini, admin["Passwords"], AdminPasswords);
--- a/hphp/runtime/base/runtime-option.h
+++ b/hphp/runtime/base/runtime-option.h
@@ -253,6 +253,7 @@
 
   static std::string TakeoverFilename;
   static int AdminServerPort;
+  static int AdminServerHttpPort;
   static int AdminThreadCount;
   static std::string AdminPassword;
   static std::set<std::string> AdminPasswords;
--- a/hphp/runtime/server/http-server.cpp
+++ b/hphp/runtime/server/http-server.cpp
@@ -536,6 +536,9 @@
     } catch (FailedToListenException &e) {
       if (RuntimeOption::ServerExitOnBindFail) return false;
 
+      // Go on with this only if there is an admin http interface
+      if (RuntimeOption::AdminServerHttpPort == 0) break;
+
       if (i == 0) {
         Logger::Info("shutting down old HPHP server by /stop command");
       }
@@ -556,7 +559,7 @@
         RuntimeOption::ServerIP;
       url += serverIp;
       url += ":";
-      url += boost::lexical_cast<std::string>(RuntimeOption::AdminServerPort);
+      url += boost::lexical_cast<std::string>(RuntimeOption::AdminServerHttpPort);
       url += "/stop";
       std::string auth;
 
